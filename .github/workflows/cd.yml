name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # Step 1: Get information about the triggering workflow
      - name: Get workflow info
        run: |
          echo "CI_RUN_ID=${{ github.event.workflow_run.id }}" >> $GITHUB_ENV
          echo "REPO=${{ github.repository }}" >> $GITHUB_ENV
      # had to download Github CLI which will help in downloading artifact via Github CLI
      - name: Install GitHub CLI
        run: |
              type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
              curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
              sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
              sudo apt update
              sudo apt install gh -y

      # Step 2: Download the artifact using GitHub CLI
      - name: Download artifact via GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run download ${{ env.CI_RUN_ID }} --artifact node-app-package --dir deployment-package
          
      # Step 3: Rest of your deployment steps
      - name: Unzip and Prepare Artifact
        run: |
          cd ./deployment-package
          unzip -o my-app.zip -d ../live-app
          cd ../live-app

      - name: Install Dependencies
        run: npm ci --production
        working-directory: ./live-app

      - name: Set Environment Variables
        run: |
          echo "APP_ENV=production" >> $GITHUB_ENV
          echo "PORT=3001" >> $GITHUB_ENV

      - name: Verify Deployment Files
        run: ls -la
        working-directory: ./live-app

      - name: Start Application
        run: npm start
        working-directory: ./live-app
        env:
          PORT: ${{ env.PORT }}
          APP_ENV: ${{ env.APP_ENV }}